package com.oops;

public class TestingWashingMachine {
	public static void main(String[] args) {

		Cloth cloth[] = new Cloth[5];

		cloth[0] = new Cloth("Cotton", "White", 1000, "Jeans", false);
		cloth[1] = new Cloth("Wool", "Red", 2000, "Sweater", false);
		cloth[2] = new Cloth("Denim", "Blue", 1500, "Jeans", true);
		cloth[3] = new Cloth("Cotton", "Blue", 1500, "Bedsheet", false);
		cloth[3] = new Cloth("Cotton", "Blue", 1500, "Bedsheet", false);
		Water water = new Water("Hard", 34, "40C");
		Electricity elect = new Electricity("AC", 300f, 29, 4, "TorrentPower");
		WashingPowder washPowder = new WashingPowder(20, "Ariel", "top lode", false, 400);

		WashingMachine washingMachine1 = new WashingMachine(1, washPowder, water, elect, cloth);
		WashingMachine washingMachine2 = new WashingMachine(2, washPowder, water, elect, cloth);
		WashingMachine washingMachine3 = new WashingMachine(3, washPowder, water, elect, cloth);

		Thread thread1 = new Thread(washingMachine1);
		Thread thread2 = new Thread(washingMachine2);
		Thread thread3 = new Thread(washingMachine3);

		thread1.start();
		thread2.start();
		thread3.start();
	}
}

class Machine extends Thread {

}

class WashingMachine implements Runnable {

	private int machineNumber;
	private WashingPowder washPowder;
	private Water water;
	private Electricity elect;
	private Cloth[] cloth;

	public WashingMachine(int machineNumber, WashingPowder washPowder, Water water, Electricity elect, Cloth[] cloth) {
		this.machineNumber = machineNumber;
		this.washPowder = washPowder;
		this.water = water;
		this.elect = elect;
		this.cloth = cloth;
	}

	@Override
	public void run() {
		Laundry laundry = new Laundry();
		laundry.setNumberOfCloths(cloth.length);
		laundry.setTimeRequired(1.6f);
		laundry.setWaterUsed(water.getQuantity());
		laundry.setElectricityUsed(elect.getUnitUsed());
		laundry.setCostOfWashingPowder(washPowder.getPrice());
		float cost = washPowder.getPrice() + (elect.getUnitUsed() * elect.getCostPerUnit());
		laundry.setTotalCost(cost);
		laundry.setCostOfWashingPowder(cost / cloth.length);

		System.out.println(
				"Washing machine " + machineNumber + " started (Thread ID: " + Thread.currentThread().getId() + ")");
		System.out.println("Laundry in washing machine " + machineNumber + ": " + laundry);

		try {
			for (int i = 0; i < 5; i++) {
				System.out.println("Washing machine " + machineNumber + " is running iteration " + i + " (Thread ID: "
						+ Thread.currentThread().getId() + ")");
				Thread.sleep(1000);
			}
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

		System.out.println(
				"Washing machine " + machineNumber + " finished (Thread ID: " + Thread.currentThread().getId() + ")");
	}
}

class Laundry {
	private int numberOfCloths;
	private float timeRequired;
	private float totalCost;
	private float waterUsed;
	private float electricityUsed;
	private float costOfWashingPowder; //

	public Laundry() {

	}

	public Laundry(int numberOfCloths, float timeRequired, float totalCost, float waterUsed, float electricityUsed,
			float costOfWashingPowder) {
		super();
		this.numberOfCloths = numberOfCloths;
		this.timeRequired = timeRequired;
		this.totalCost = totalCost;
		this.waterUsed = waterUsed;
		this.electricityUsed = electricityUsed;
		this.costOfWashingPowder = costOfWashingPowder;
	}

	@Override
	public String toString() {
		return "Laundry [Number of Cloths=" + numberOfCloths + ", Time Required=" + timeRequired + ", Total Cost="
				+ totalCost + ", Water Used=" + waterUsed + ", Electricity Used=" + electricityUsed
				+ ", Cost Of Washing Powder=" + costOfWashingPowder + "]";
	}

	public int getNumberOfCloths() {
		return numberOfCloths;
	}

	public void setNumberOfCloths(int numberOfCloths) {
		this.numberOfCloths = numberOfCloths;
	}

	public float getTimeRequired() {
		return timeRequired;
	}

	public void setTimeRequired(float timeRequired) {
		this.timeRequired = timeRequired;
	}

	public float getTotalCost() {
		return totalCost;
	}

	public void setTotalCost(float totalCost) {
		this.totalCost = totalCost;
	}

	public float getWaterUsed() {
		return waterUsed;
	}

	public void setWaterUsed(float waterUsed) {
		this.waterUsed = waterUsed;
	}

	public float getElectricityUsed() {
		return electricityUsed;
	}

	public void setElectricityUsed(float electricityUsed) {
		this.electricityUsed = electricityUsed;
	}

	public float getCostOfWashingPowder() {
		return costOfWashingPowder;
	}

	public void setCostOfWashingPowder(float costOfWashingPowder) {
		this.costOfWashingPowder = costOfWashingPowder;
	}

}

class Tub {

}

class WashingTub extends Tub {
	private int capacity;
	private String type;

	public WashingTub(int capacity, String type) {
		super();
		this.capacity = capacity;
		this.type = type;
	}

	@Override
	public String toString() {
		return "WashingTub [capacity=" + capacity + ", type=" + type + "]";
	}

	public int getCapacity() {
		return capacity;
	}

	public void setCapacity(int capacity) {
		this.capacity = capacity;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

}

class Powder {

}

class WashingPowder extends Powder { // isA

	private int quantity;
	private String brand;
	private String type;
	private boolean scented;
	private float price;

	public WashingPowder(int quantity, String brand, String type, boolean scented, float price) {
		super();
		this.quantity = quantity;
		this.brand = brand;
		this.type = type;
		this.scented = scented;
		this.price = price;
	}

	@Override
	public String toString() {
		return "WashingPowder [quantity=" + quantity + ", brand=" + brand + ", type=" + type + ", scented=" + scented
				+ ", price=" + price + "]";
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	public String getBrand() {
		return brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public boolean isScented() {
		return scented;
	}

	public void setScented(boolean scented) {
		this.scented = scented;
	}

	public float getPrice() {
		return price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

}

class Water {
	private String type;
	private int quantity;
	private String temperature;

	public Water(String type, int quantity, String temperature) {
		super();
		this.type = type;
		this.quantity = quantity;
		this.temperature = temperature;
	}

	@Override
	public String toString() {
		return "Water [type=" + type + ", quantity=" + quantity + ", temperature=" + temperature + "]";
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	public String getTemperature() {
		return temperature;
	}

	public void setTemperature(String temperature) {
		this.temperature = temperature;
	}

}

class Electricity {
	private String type;
	private float voltage;
	private int costPerUnit;
	private int unitUsed;
	private String supplier;

	public Electricity(String type, float voltage, int costPerUnit, int unitUsed, String supplier) {
		super();
		this.type = type;
		this.voltage = voltage;
		this.costPerUnit = costPerUnit;
		this.unitUsed = unitUsed;
		this.supplier = supplier;
	}

	@Override
	public String toString() {
		return "Electricity [type=" + type + ", voltage=" + voltage + ", costPerUnit=" + costPerUnit + ", unitUsed="
				+ unitUsed + ", supplier=" + supplier + "]";
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public float getVoltage() {
		return voltage;
	}

	public void setVoltage(float voltage) {
		this.voltage = voltage;
	}

	public int getCostPerUnit() {
		return costPerUnit;
	}

	public void setCostPerUnit(int costPerUnit) {
		this.costPerUnit = costPerUnit;
	}

	public int getUnitUsed() {
		return unitUsed;
	}

	public void setUnitUsed(int unitUsed) {
		this.unitUsed = unitUsed;
	}

	public String getSupplier() {
		return supplier;
	}

	public void setSupplier(String supplier) {
		this.supplier = supplier;
	}

}

class Cloth {
	private String material; //
	private String color;
	private float cost;
	private String type;
	private boolean clean; //

	public Cloth(String material, String color, float cost, String type, boolean clean) {
		super();
		this.material = material;
		this.color = color;
		this.cost = cost;
		this.type = type;
		this.clean = clean;
	}

	@Override
	public String toString() {
		return "Cloth [material=" + material + ", color=" + color + ", cost=" + cost + ", type=" + type + ", clean="
				+ clean + "]";
	}

	public String getMaterial() {
		return material;
	}

	public void setMaterial(String material) {
		this.material = material;
	}

	public String getColor() {
		return color;
	}

	public void setColor(String color) {
		this.color = color;
	}

	public float getCost() {
		return cost;
	}

	public void setCost(float cost) {
		this.cost = cost;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public boolean isClean() {
		return clean;
	}

	public void setClean(boolean clean) {
		this.clean = clean;
	}

}
